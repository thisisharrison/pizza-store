{"version":3,"sources":["components/Basket/OrderSummary.tsx","utils/api/apiConfig.ts","utils/api/index.ts","utils/ObjectUtil.ts","components/Basket/index.tsx","assets/pizza.jpg","components/MenuItem/MenuImage.tsx","components/MenuItem/index.tsx","components/Modal/CustomizeModal.tsx","components/MenuList/index.tsx","module/Home/index.tsx"],"names":["OrderSummary","React","memo","orders","useOrderContext","dispatch","enqueueSnackbar","useSnackbar","removeItem","id","type","payload","variant","List","map","_","OrderItem","order","onRemove","ListItem","disablePadding","ListItemIcon","IconButton","onClick","role","color","aria-label","ListItemText","sx","width","primary","quantity","name","secondary","size","toppings","textAlign","price","apiUrls","apiUrl","window","location","hostname","axios","defaults","headers","get","post","ObjectUtil","Object","freeze","toArray","object","keys","reduceByKey","key","reduce","acc","cur","Basket","state","orderItems","useMemo","orderTotal","orderActive","Box","p","m","display","flexDirection","justifyContent","data-testid","component","onSubmit","event","preventDefault","transaction","values","then","res","console","info","catch","error","response","status","data","errors","fields","join","bgcolor","borderRadius","overflow","maxHeight","height","overflowY","Typography","align","mt","Divider","my","flexWrap","fontWeight","ml","Button","fullWidth","disabled","Link","href","underline","cursor","ImageButton","styled","ButtonBase","theme","position","breakpoints","down","zIndex","opacity","border","ImageSrc","left","right","top","bottom","backgroundSize","backgroundPosition","ImageBackdrop","backgroundColor","palette","common","black","transition","transitions","create","MenuImage","focusRipple","style","backgroundImage","Pizza","MenuItem","item","handleClick","Card","borderColor","CardContent","CardActions","mb","mx","Array","from","length","i","sizes","CustomizeDialog","open","onClose","setOrder","handleClose","updateToppings","topping","target","selected","indexOf","newToppings","filter","Set","prev","Dialog","maxWidth","DialogContent","FormControl","FormGroup","columnCount","checked","breakInside","FormControlLabel","control","Checkbox","onChange","label","RadioGroup","defaultValue","value","Radio","DialogActions","flexGrow","CustomizeModal","editing","toast","dummyMenu","MenuList","useState","setOpen","Home","alignItems","minHeight"],"mappings":"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","file":"static/js/4.9baf8fae.chunk.js","sourcesContent":["import React from \"react\";\nimport { useOrderContext } from \"../../context/order\";\nimport { useSnackbar } from \"notistack\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport { IconButton, List, ListItem, ListItemIcon, ListItemText } from \"@mui/material\";\nimport type { Order } from \"../../shared/types\";\n\nexport const OrderSummary = React.memo(({ orders }: { orders: Order[] }) => {\n    const [, dispatch] = useOrderContext();\n    const { enqueueSnackbar } = useSnackbar();\n\n    const removeItem = (id: number) => {\n        dispatch({ type: \"delete\", payload: id });\n        enqueueSnackbar(\"Item is removed\", { variant: \"info\" });\n    };\n\n    return (\n        <List>\n            {orders.map((_) => (\n                <OrderItem key={_.id} order={_} onRemove={removeItem} />\n            ))}\n        </List>\n    );\n});\n\nconst OrderItem = React.memo(({ order, onRemove }: { order: Order; onRemove: (id: number) => void }) => (\n    <ListItem disablePadding>\n        <ListItemIcon>\n            <IconButton onClick={() => onRemove(order.id)} role=\"remove\">\n                <CancelIcon color=\"primary\" aria-label=\"remove\" />\n            </IconButton>\n        </ListItemIcon>\n        <ListItemText sx={{ width: 0.8 }} primary={`${order.quantity} x ${order.name}`} secondary={`${order.size}, ${order.toppings}`} />\n        <ListItemText sx={{ textAlign: \"right\", width: 0.2 }} primary={`${`$` + order.price}`} />\n    </ListItem>\n));\n","let apiUrl;\n\n/** Production and Development endpoints, do not change */\nconst apiUrls = {\n    production: \"https://hidden-springs-06951.herokuapp.com/\",\n    development: \"http://localhost:8080\",\n};\n\nif (window.location.hostname === \"localhost\") {\n    apiUrl = apiUrls.development;\n} else {\n    apiUrl = apiUrls.production;\n}\n\nexport default apiUrl as string;\n","import axios from \"axios\";\nimport apiUrl from \"./apiConfig\";\nimport type { Order } from \"../../shared/types\";\n\naxios.defaults.headers.get[\"Content-Type\"] = \"application/json\";\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\n\nexport const createOrder = (order: Order | Order[]): Promise<any> => axios.post(apiUrl + \"/api/orders\", order);\n","function toArray(object: Record<string, any>) {\n    return Object.keys(object).map((_) => object[_]);\n}\n\nfunction reduceByKey(object: Record<string, any>, key: string) {\n    return Object.keys(object).reduce((acc, cur) => (acc += object[cur][key]), 0);\n}\n\nexport const ObjectUtil = Object.freeze({\n    toArray,\n    reduceByKey,\n});\n","import React from \"react\";\nimport { OrderSummary } from \"./OrderSummary\";\nimport { useOrderContext } from \"../../context/order\";\nimport { createOrder } from \"../../utils/api\";\nimport { ObjectUtil } from \"../../utils/ObjectUtil\";\nimport { useSnackbar } from \"notistack\";\nimport { Box } from \"@mui/system\";\nimport { Button, Divider, Link, Typography } from \"@mui/material\";\n\nexport const Basket = () => {\n    const [state, dispatch] = useOrderContext();\n    const { enqueueSnackbar } = useSnackbar();\n\n    const { orders } = state;\n\n    const orderItems = React.useMemo(() => {\n        if (orders === null) return [];\n        return ObjectUtil.toArray(orders as Record<string, any>);\n    }, [orders]);\n\n    const orderTotal = React.useMemo(() => {\n        if (orders === null) return 0;\n        return ObjectUtil.reduceByKey(orders as Record<string, any>, \"price\");\n    }, [orders]);\n\n    const emptyBasket = () => {\n        dispatch({ type: \"clear\" });\n        enqueueSnackbar(\"Basket cleared!\", { variant: \"info\" });\n    };\n\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        if (!orders) return;\n        const transaction = Object.values(orders);\n        // submit to api service\n        createOrder(transaction)\n            .then((res) => {\n                dispatch({ type: \"submit\" });\n                console.info(\"submit to API: \", res);\n                enqueueSnackbar(\"Your order is in the kitchen!\", { variant: \"success\" });\n            })\n            .catch((error) => {\n                if (error.response.status === 400) {\n                    const {\n                        response: {\n                            data: { name, errors },\n                        },\n                    } = error;\n                    console.error(\"api error: \", name);\n                    const fields = Object.keys(errors).join(\", \");\n                    enqueueSnackbar(`Your order was not successful! Check ${fields}.`, { variant: \"error\" });\n                }\n            });\n    };\n\n    const orderActive = orderTotal > 0;\n\n    return (\n        <Box\n            sx={{\n                p: 1,\n                m: 1,\n                width: [1, 1, 0.3],\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"center\",\n            }}\n            data-testid=\"basket\"\n        >\n            <Box\n                component=\"form\"\n                onSubmit={handleSubmit}\n                sx={{\n                    bgcolor: \"#f3f2f2\",\n                    borderRadius: 1,\n                    overflow: \"hidden\",\n                    p: 2,\n                }}\n            >\n                <Box\n                    component=\"div\"\n                    sx={{\n                        maxHeight: \"65vh\",\n                        height: \"75%\",\n                        overflow: \"auto\",\n                        overflowY: \"scroll\",\n                    }}\n                >\n                    {orderTotal ? (\n                        <OrderSummary orders={orderItems} />\n                    ) : (\n                        <Typography variant=\"body1\" align=\"center\" sx={{ mt: 4 }}>\n                            No items in your basket\n                        </Typography>\n                    )}\n                </Box>\n\n                <Divider variant=\"middle\" sx={{ my: 3 }} />\n\n                <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"flex-end\" role=\"order-total\">\n                    <Typography variant=\"body1\" sx={{ fontWeight: 700 }}>\n                        Total\n                    </Typography>\n                    <Typography variant=\"body1\" sx={{ fontWeight: 700, ml: 4 }}>\n                        $ {orderTotal}\n                    </Typography>\n                </Box>\n\n                <Button type=\"submit\" variant=\"contained\" fullWidth disabled={!orderActive} sx={{ my: 4 }}>\n                    Checkout\n                </Button>\n            </Box>\n\n            <Link\n                variant=\"h6\"\n                component=\"button\"\n                disabled={!orderActive}\n                align=\"center\"\n                href=\"#\"\n                underline={orderActive ? \"always\" : \"none\"}\n                sx={{\n                    fontWeight: 400,\n                    color: orderActive ? \"grey[400]\" : \"#d5d5d5\",\n                    my: 3,\n                    \":hover\": {\n                        cursor: orderActive ? \"pointer\" : \"auto\",\n                    },\n                }}\n                onClick={emptyBasket}\n            >\n                Empty Basket\n            </Link>\n        </Box>\n    );\n};\n","export default __webpack_public_path__ + \"static/media/pizza.98ab3b9b.jpg\";","import React from \"react\";\nimport Pizza from \"../../assets/pizza.jpg\";\nimport { styled } from \"@mui/material/styles\";\nimport { ButtonBase } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport type { Theme } from \"@mui/material\";\n\nconst ImageButton = styled(ButtonBase)(({ theme }) => ({\n    position: \"relative\",\n    height: 140,\n    [theme.breakpoints.down(\"md\")]: {\n        width: \"100% !important\", // Overrides inline-style\n        height: 300,\n    },\n    \"&:hover, &.Mui-focusVisible\": {\n        zIndex: 1,\n        \"& .MuiImageBackdrop-root\": {\n            opacity: 0.15,\n        },\n        \"& .MuiImageMarked-root\": {\n            opacity: 0,\n        },\n        \"& .MuiTypography-root\": {\n            border: \"4px solid currentColor\",\n        },\n    },\n}));\n\nconst ImageSrc = styled(\"span\")({\n    position: \"absolute\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    borderRadius: 8,\n});\n\nconst ImageBackdrop = styled(\"span\")(({ theme }: { theme: Theme }) => ({\n    position: \"absolute\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    borderRadius: 8,\n    backgroundColor: theme.palette.common.black,\n    opacity: 0.2,\n    transition: theme.transitions.create(\"opacity\"),\n    \":hover\": {\n        opacity: 0,\n    },\n}));\n\ninterface MenuImageProps {\n    onClick: () => void;\n}\n\nexport const MenuImage = React.memo(({ onClick }: MenuImageProps) => {\n    return (\n        <Box sx={{ display: \"flex\", flexWrap: \"wrap\", width: \"100%\" }}>\n            <ImageButton focusRipple style={{ width: \"100%\" }} onClick={onClick} role=\"dialog-image\">\n                <ImageSrc\n                    style={{\n                        backgroundImage: `url(${Pizza})`,\n                    }}\n                />\n                <ImageBackdrop />\n            </ImageButton>\n        </Box>\n    );\n});\n","import React from \"react\";\nimport { MenuImage } from \"./MenuImage\";\nimport { useOrderContext } from \"../../context/order\";\nimport type { MenuItemI } from \"../../shared/types\";\nimport { Button, Card, CardActions, CardContent, Typography } from \"@mui/material\";\n\nexport const MenuItem = React.memo(({ item, onClick }: { item: MenuItemI; onClick: () => void }) => {\n    const [, dispatch] = useOrderContext();\n\n    const { name, price } = item;\n\n    const handleClick = () => {\n        dispatch({ type: \"edit\", payload: { name, price } });\n        onClick();\n    };\n\n    return (\n        <Card variant=\"outlined\" sx={{ width: [1, 1, 0.3], m: 1, borderColor: \"#e9e9e9\", textAlign: \"center\", borderRadius: 4 }}>\n            <CardContent>\n                <MenuImage onClick={handleClick} />\n                <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mt: 2 }}>\n                    {name} - {`$` + price}\n                </Typography>\n            </CardContent>\n            <CardActions\n                sx={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    mb: 2,\n                    mx: 1,\n                }}\n            >\n                <Button variant=\"contained\" fullWidth onClick={handleClick} role=\"dialog-button\">\n                    Choose\n                </Button>\n            </CardActions>\n        </Card>\n    );\n});\n","import * as React from \"react\";\nimport { useOrderContext } from \"../../context/order\";\nimport { useSnackbar } from \"notistack\";\nimport Button from \"@mui/material/Button\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport Dialog from \"@mui/material/Dialog\";\nimport { Box } from \"@mui/system\";\nimport { Checkbox, DialogActions, DialogContent, FormControl, FormControlLabel, FormGroup, Radio, RadioGroup } from \"@mui/material\";\n\nconst toppings = Array.from({ length: 9 }).map((_, i) => `Pizza Topping #${i + 1}`);\nconst sizes = Array.from({ length: 3 }).map((_, i) => `Pizza Size #${i + 1}`);\n\ninterface CustomizeDialogProps {\n    open: boolean;\n    onClose: (order: OrderState | null) => void;\n}\n\ninterface OrderState {\n    toppings: string[];\n    size: string;\n}\n\nfunction CustomizeDialog({ open, onClose }: CustomizeDialogProps) {\n    const [order, setOrder] = React.useState<OrderState>({\n        toppings: [],\n        size: \"Pizza Size #1\",\n    });\n\n    const { enqueueSnackbar } = useSnackbar();\n\n    const handleClose = () => {\n        onClose(null);\n    };\n\n    /** Validates toppings before submit. To see API error messages, comment out below lines leaving only `onClose(order)` */\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        if (order.toppings.length > 0) {\n            onClose(order);\n        } else {\n            enqueueSnackbar(\"Must choose at least one topping\", { variant: \"error\" });\n        }\n    };\n\n    const updateToppings = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const topping = event.target.name;\n        const selected = order.toppings.indexOf(topping) !== -1;\n        let newToppings = [...order.toppings];\n        if (selected) {\n            newToppings = newToppings.filter((_) => _ !== topping);\n        } else {\n            newToppings = Array.from(new Set([topping, ...newToppings]));\n        }\n        setOrder((prev) => ({ ...prev, toppings: newToppings }));\n    };\n\n    const updateSize = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setOrder((prev) => ({ ...prev, size: event.target.value }));\n    };\n\n    return (\n        <Dialog onClose={handleClose} open={open} maxWidth=\"lg\" role=\"dialog\">\n            <Box component=\"form\" onSubmit={handleSubmit}>\n                <DialogContent>\n                    <Box>\n                        <FormControl>\n                            <FormGroup>\n                                <List sx={{ columnCount: [1, 2, 3] }}>\n                                    {toppings.map((topping) => {\n                                        const checked = order.toppings.indexOf(topping) !== -1;\n                                        return (\n                                            <ListItem disablePadding key={topping} sx={{ breakInside: \"avoid\" }}>\n                                                <FormControlLabel control={<Checkbox checked={checked} onChange={updateToppings} name={topping} />} label={topping} />\n                                            </ListItem>\n                                        );\n                                    })}\n                                </List>\n                            </FormGroup>\n                        </FormControl>\n                    </Box>\n\n                    <Box>\n                        <FormControl>\n                            <RadioGroup aria-label=\"size\" defaultValue={sizes[0]} name=\"size\" value={order.size} onChange={updateSize}>\n                                {sizes.map((size) => (\n                                    <FormControlLabel control={<Radio />} value={size} label={size} key={size} />\n                                ))}\n                            </RadioGroup>\n                        </FormControl>\n                    </Box>\n                </DialogContent>\n\n                <DialogActions>\n                    <Box display=\"flex\" flexGrow=\"1\" justifyContent=\"space-evenly\">\n                        <Button variant=\"contained\" type=\"submit\" fullWidth sx={{ m: 2 }}>\n                            Add to Basket\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={handleClose} fullWidth sx={{ m: 2 }}>\n                            Cancel\n                        </Button>\n                    </Box>\n                </DialogActions>\n            </Box>\n        </Dialog>\n    );\n}\n\nexport function CustomizeModal({ open, onClose }: { open: boolean; onClose: () => void }) {\n    const [state, dispatch] = useOrderContext();\n    const { enqueueSnackbar } = useSnackbar();\n\n    const { editing } = state;\n\n    const handleClose = (order: OrderState | null) => {\n        if (order) {\n            // @ts-ignore -- will always call handleClose with editing not null\n            dispatch({ type: \"create\", payload: { quantity: 1, ...editing, ...order }, toast: \"create\" });\n            enqueueSnackbar(\"Added an item to Basket\", { variant: \"success\" });\n        } else {\n            dispatch({ type: \"edit\", payload: null });\n        }\n        onClose();\n    };\n\n    return <CustomizeDialog key={editing ? editing.id : \"none\"} open={open} onClose={handleClose} />;\n}\n","import React from \"react\";\nimport { MenuItem } from \"../MenuItem\";\nimport { CustomizeModal } from \"../Modal/CustomizeModal\";\nimport { Box } from \"@mui/system\";\nimport type { MenuItemI } from \"../../shared/types\";\n\nconst dummyMenu: MenuItemI[] = Array.from({ length: 6 }).map((_, i) => ({\n    id: i,\n    name: `Pizza Name ${i + 1}`,\n    price: 99,\n}));\n\nexport const MenuList = () => {\n    const [open, setOpen] = React.useState(false);\n\n    return (\n        <>\n            <Box\n                sx={{\n                    flexGrow: 1,\n                    width: [1, 1, 0.7],\n                    display: \"flex\",\n                    flexWrap: \"wrap\",\n                    my: 1,\n                }}\n            >\n                {dummyMenu.map((_) => (\n                    <MenuItem key={_.id} item={_} onClick={() => setOpen(true)} />\n                ))}\n            </Box>\n            <CustomizeModal open={open} onClose={() => setOpen(false)} />\n        </>\n    );\n};\n","import React from \"react\";\nimport { Basket } from \"../../components/Basket\";\nimport { MenuList } from \"../../components/MenuList\";\nimport { Box } from \"@mui/system\";\n\nexport default function Home() {\n    return (\n        <>\n            <Box sx={{ display: \"flex\", flexDirection: [\"column\", \"column\", \"row\"], alignItems: \"flex-start\", minHeight: \"100vh\" }}>\n                <MenuList />\n                <Basket />\n            </Box>\n        </>\n    );\n}\n"],"sourceRoot":""}