{"version":3,"sources":["components/Basket/OrderSummary.tsx","components/Basket/index.tsx","assets/pizza.jpg","components/MenuItem/MenuImage.tsx","components/MenuItem/index.tsx","components/MenuList/index.tsx","components/Modal/CustomizeModal.tsx","module/Home/index.tsx"],"names":["OrderSummary","orders","List","map","_","OrderItem","order","id","React","memo","ListItem","disablePadding","ListItemIcon","IconButton","color","aria-label","ListItemText","primary","quantity","name","secondary","size","toppings","dummyOrder","Array","from","length","i","Basket","Box","sx","p","m","minWidth","display","flexDirection","justifyContent","bgcolor","borderRadius","Typography","variant","align","Divider","my","flexWrap","fontWeight","ml","Button","fullWidth","disabled","ImageButton","styled","ButtonBase","theme","position","height","breakpoints","down","width","zIndex","opacity","border","ImageSrc","left","right","top","bottom","backgroundSize","backgroundPosition","ImageBackdrop","backgroundColor","palette","common","black","transition","transitions","create","MenuImage","focusRipple","style","backgroundImage","Pizza","MenuItem","Card","borderColor","textAlign","CardContent","mt","CardActions","mb","mx","MenuList","flexGrow","sizes","CustomizeDialog","props","open","handleClose","handleChange","event","Dialog","onClose","maxWidth","DialogContent","FormControl","FormGroup","columnCount","topping","FormControlLabel","control","Checkbox","checked","onChange","label","RadioGroup","defaultValue","Radio","DialogActions","onClick","CustomizeModal","setOpen","selectedValue","setSelectedValue","value","Home","alignItems","minHeight"],"mappings":"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","file":"static/js/4.d839aa84.chunk.js","sourcesContent":["import React from \"react\";\nimport { IconButton, List, ListItem, ListItemIcon, ListItemText } from \"@mui/material\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\n\ninterface OrderProps {\n    id: number;\n    quantity: number;\n    name: string;\n    size: string;\n    toppings: string[];\n}\n\nexport const OrderSummary = ({ orders }: { orders: OrderProps[] }) => {\n    return (\n        <List>\n            {orders.map((_) => (\n                <OrderItem key={_.id} order={_} />\n            ))}\n        </List>\n    );\n};\n\nconst OrderItem = React.memo(({ order }: { order: OrderProps }) => (\n    <ListItem disablePadding>\n        <ListItemIcon>\n            <IconButton>\n                <CancelIcon color=\"primary\" aria-label=\"delete\" />\n            </IconButton>\n        </ListItemIcon>\n        <ListItemText primary={`${order.quantity} x ${order.name}`} secondary={`${order.size}, ${order.toppings}`} />\n    </ListItem>\n));\n","import React from \"react\";\nimport { OrderSummary } from \"./OrderSummary\";\nimport { Box } from \"@mui/system\";\nimport { Button, Divider, Typography } from \"@mui/material\";\n\nconst dummyOrder = [\n    {\n        id: 1,\n        quantity: 1,\n        name: \"Pizza\",\n        size: \"Large\",\n        toppings: [\"Topping #1\", \"Topping #2\", \"Topping #3\"],\n    },\n    {\n        id: 2,\n        quantity: 1,\n        name: \"Pizza\",\n        size: \"Medium\",\n        toppings: Array.from({ length: 6 }).map((_, i) => `Topping #${i + 1}`),\n    },\n];\n\nexport const Basket = () => {\n    return (\n        <Box\n            sx={{\n                p: 1,\n                m: 1,\n                minWidth: [1, 1, 0.3],\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"center\",\n            }}\n        >\n            <Box\n                sx={{\n                    bgcolor: \"#f3f2f2\",\n                    borderRadius: 1,\n                    p: 4,\n                }}\n            >\n                <Typography variant=\"body1\" align=\"center\">\n                    No items in your basket\n                </Typography>\n\n                <OrderSummary orders={dummyOrder} />\n\n                <Divider variant=\"middle\" sx={{ my: 3 }} />\n\n                <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"flex-end\">\n                    <Typography variant=\"body1\" sx={{ fontWeight: 700 }}>\n                        Total\n                    </Typography>\n                    <Typography variant=\"body1\" sx={{ fontWeight: 700, ml: 4 }}>\n                        $0\n                    </Typography>\n                </Box>\n\n                <Button variant=\"contained\" fullWidth disabled sx={{ my: 4 }}>\n                    Checkout\n                </Button>\n            </Box>\n\n            <Typography variant=\"h6\" align=\"center\" sx={{ fontWeight: 400, color: \"#d5d5d5\", my: 3 }}>\n                Empty Basket\n            </Typography>\n        </Box>\n    );\n};\n","export default __webpack_public_path__ + \"static/media/pizza.98ab3b9b.jpg\";","import { ButtonBase } from \"@mui/material\";\nimport { Box, styled } from \"@mui/system\";\nimport React from \"react\";\nimport Pizza from \"../../assets/pizza.jpg\";\n\nconst ImageButton = styled(ButtonBase)(({ theme }) => ({\n    position: \"relative\",\n    height: 140,\n    [theme.breakpoints.down(\"sm\")]: {\n        width: \"100% !important\", // Overrides inline-style\n        height: 100,\n    },\n    \"&:hover, &.Mui-focusVisible\": {\n        zIndex: 1,\n        \"& .MuiImageBackdrop-root\": {\n            opacity: 0.15,\n        },\n        \"& .MuiImageMarked-root\": {\n            opacity: 0,\n        },\n        \"& .MuiTypography-root\": {\n            border: \"4px solid currentColor\",\n        },\n    },\n}));\n\nconst ImageSrc = styled(\"span\")({\n    position: \"absolute\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    borderRadius: 8,\n});\n\nconst ImageBackdrop = styled(\"span\")(({ theme }) => ({\n    position: \"absolute\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    borderRadius: 8,\n    backgroundColor: theme.palette.common.black,\n    opacity: 0.2,\n    // @ts-ignore\n    transition: theme.transitions.create(\"opacity\"),\n    \":hover\": {\n        opacity: 0,\n    },\n}));\n\nexport const MenuImage = React.memo(() => {\n    return (\n        <Box sx={{ display: \"flex\", flexWrap: \"wrap\", width: \"100%\" }}>\n            <ImageButton focusRipple style={{ width: \"100%\" }}>\n                <ImageSrc\n                    style={{\n                        backgroundImage: `url(${Pizza})`,\n                    }}\n                />\n                <ImageBackdrop />\n            </ImageButton>\n        </Box>\n    );\n});\n","import React from \"react\";\nimport { MenuImage } from \"./MenuImage\";\nimport { Button, Card, CardActions, CardContent, Typography } from \"@mui/material\";\n\nexport const MenuItem = () => {\n    return (\n        <Card variant=\"outlined\" sx={{ width: [1, 1, 0.3], m: 1, borderColor: \"#e9e9e9\", textAlign: \"center\", borderRadius: 4 }}>\n            <CardContent>\n                <MenuImage />\n                <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mt: 2 }}>\n                    Pizza Name - $99\n                </Typography>\n            </CardContent>\n            <CardActions\n                sx={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    mb: 2,\n                    mx: 1,\n                }}\n            >\n                <Button variant=\"contained\" fullWidth>\n                    Choose\n                </Button>\n            </CardActions>\n        </Card>\n    );\n};\n","import React from \"react\";\nimport { MenuItem } from \"../MenuItem\";\nimport { Box } from \"@mui/system\";\n\nexport const MenuList = () => {\n    return (\n        <Box\n            sx={{\n                flexGrow: 1,\n                display: \"flex\",\n                flexWrap: \"wrap\",\n                m: 1,\n            }}\n        >\n            {Array.from({ length: 6 }).map((_, i) => (\n                <MenuItem key={`item-${i}`} />\n            ))}\n        </Box>\n    );\n};\n","import * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport Dialog from \"@mui/material/Dialog\";\nimport { Box } from \"@mui/system\";\nimport { Checkbox, DialogActions, DialogContent, FormControl, FormControlLabel, FormGroup, Radio, RadioGroup } from \"@mui/material\";\n\nconst toppings = Array.from({ length: 9 }).map((_, i) => `Pizza Topping #${i + 1}`);\nconst sizes = Array.from({ length: 3 }).map((_, i) => `Pizza Size #${i + 1}`);\n\nexport interface CustomizeDialogProps {\n    open: boolean;\n    selectedValue: string;\n    onClose: (value: string) => void;\n}\n\nfunction CustomizeDialog(props: CustomizeDialogProps) {\n    // const { onClose, selectedValue, open } = props;\n    const { open } = props;\n\n    const handleClose = () => {\n        // TODO\n    };\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        // TODO\n    };\n\n    return (\n        <Dialog onClose={handleClose} open={open} maxWidth=\"lg\">\n            <DialogContent>\n                <Box>\n                    <FormControl>\n                        <FormGroup>\n                            <List sx={{ columnCount: [2, 2, 3] }}>\n                                {toppings.map((topping) => (\n                                    <ListItem disablePadding key={topping}>\n                                        <FormControlLabel control={<Checkbox checked={false} onChange={handleChange} name={topping} />} label={topping} />\n                                    </ListItem>\n                                ))}\n                            </List>\n                        </FormGroup>\n                    </FormControl>\n                </Box>\n\n                <Box>\n                    <FormControl>\n                        <RadioGroup aria-label=\"size\" defaultValue={sizes[0]} name=\"size\">\n                            {sizes.map((size) => (\n                                <FormControlLabel control={<Radio />} label={size} key={size} />\n                            ))}\n                        </RadioGroup>\n                    </FormControl>\n                </Box>\n            </DialogContent>\n\n            <DialogActions>\n                <Box display=\"flex\" flexGrow=\"1\" justifyContent=\"space-evenly\">\n                    <Button variant=\"contained\" onClick={handleClose} fullWidth sx={{ m: 2 }}>\n                        Add to Basket\n                    </Button>\n                    <Button variant=\"contained\" color=\"secondary\" onClick={handleClose} fullWidth sx={{ m: 2 }}>\n                        Cancel\n                    </Button>\n                </Box>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nexport function CustomizeModal() {\n    const [open, setOpen] = React.useState(false);\n    const [selectedValue, setSelectedValue] = React.useState(toppings[1]);\n\n    const handleClose = (value: string) => {\n        setOpen(false);\n        setSelectedValue(value);\n        // TODO\n    };\n\n    return (\n        <div>\n            <CustomizeDialog selectedValue={selectedValue} open={open} onClose={handleClose} />\n        </div>\n    );\n}\n","import React from \"react\";\nimport { Basket } from \"../../components/Basket\";\nimport { MenuList } from \"../../components/MenuList\";\n// import { useAppContext } from \"../../context\";\nimport { Box } from \"@mui/system\";\nimport { CustomizeModal } from \"../../components/Modal/CustomizeModal\";\n\nexport default function Home() {\n    // React\n    // const [state] = useAppContext();\n\n    return (\n        <>\n            <Box sx={{ display: \"flex\", flexDirection: [\"column\", \"column\", \"row\"], alignItems: \"flex-start\", minHeight: \"100vh\" }}>\n                <MenuList />\n                <Basket />\n            </Box>\n            <CustomizeModal />\n        </>\n    );\n}\n"],"sourceRoot":""}