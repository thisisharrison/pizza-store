{"version":3,"sources":["context/index.tsx","components/ErrorFallback/index.tsx","module/index.tsx","index.tsx"],"names":["reducer","state","action","type","loading","Error","AppContext","React","createContext","displayName","initialState","hello","AppProvider","props","useReducer","dispatch","Provider","value","ErrorFallback","error","resetErrorBoundary","onClick","Home","lazy","App","theme","createTheme","palette","primary","main","grey","secondary","reloadPage","useCallback","window","location","reload","ThemeProvider","Container","maxWidth","Suspense","fallback","FallbackComponent","onReset","path","element","document","addEventListener","ReactDOM","render","StrictMode","getElementById"],"mappings":"6LAKO,SAASA,EAAQC,EAAkBC,GACtC,OAAQA,EAAOC,MACX,IAAK,YACD,OAAOF,EACX,IAAK,UACD,OAAO,2BACAA,GADP,IAEIG,QAASH,EAAMG,QAAU,IAEjC,IAAK,WACD,OAAO,2BACAH,GADP,IAEIG,QAASH,EAAMG,QAAU,IAEjC,QACI,MAAM,IAAIC,MAAJ,0BAA6BH,KAMxC,IAAMI,EAAaC,IAAMC,cAAkC,MAClEF,EAAWG,YAAc,aAEzB,IAAMC,EAA0B,CAC5BC,MAAO,QACPP,QAAS,GAGN,SAASQ,EAAYC,GAAa,IAAD,EACVN,IAAMO,WAAWd,EAASU,GADhB,mBAC7BT,EAD6B,KACtBc,EADsB,KAEpC,OAAO,cAACT,EAAWU,SAAZ,aAAqBC,MAAO,CAAChB,EAAOc,IAAeF,I,mBCxB/CK,EATO,SAAC,GAAiD,EAA/CC,MAAgD,IAAzCC,EAAwC,EAAxCA,mBAC5B,OACI,gCACI,sCACA,wBAAQC,QAASD,EAAjB,2B,gCCCNE,EAAOf,IAAMgB,MAAK,kBAAM,uDAiCfC,MA/Bf,WACI,IAAMC,EAAQC,YAAY,CACtBC,QAAS,CACLC,QAAS,CACLC,KAAMC,IAAK,MAEfC,UAAW,CACPF,KAAMC,IAAK,SAKjBE,EAAazB,IAAM0B,aAAY,WACjCC,OAAOC,SAASC,WACjB,IAEH,OACI,cAACC,EAAA,EAAD,CAAeZ,MAAOA,EAAtB,SACI,cAACa,EAAA,EAAD,CAAWC,SAAS,KAApB,SACI,cAAC,IAAMC,SAAP,CAAgBC,SAAU,6CAA1B,SACI,cAAC,gBAAD,CAAeC,kBAAmBxB,EAAeyB,QAASX,EAA1D,SACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAOY,KAAK,IAAIC,QAAS,cAACvB,EAAD,iB,cCzBrDwB,SAASC,iBAAiB,oBAAoB,WAC1CC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,UACI,cAACtC,EAAD,UACI,cAAC,EAAD,UAIZkC,SAASK,eAAe,c","file":"static/js/main.c0515921.chunk.js","sourcesContent":["import React from \"react\";\nimport type { RootState } from \"../shared/state\";\n\ntype ActionType = { type: \"something\"; payload: any } | { type: \"pending\" } | { type: \"resolved\" };\n\nexport function reducer(state: RootState, action: ActionType) {\n    switch (action.type) {\n        case \"something\":\n            return state;\n        case \"pending\":\n            return {\n                ...state,\n                loading: state.loading + 1,\n            };\n        case \"resolved\":\n            return {\n                ...state,\n                loading: state.loading - 1,\n            };\n        default:\n            throw new Error(`Unknown action: ${action}`);\n    }\n}\n\ntype ContextType = [RootState, React.Dispatch<ActionType>];\n\nexport const AppContext = React.createContext<ContextType | null>(null);\nAppContext.displayName = \"AppContext\";\n\nconst initialState: RootState = {\n    hello: \"world\",\n    loading: 0,\n};\n\nexport function AppProvider(props: any) {\n    const [state, dispatch] = React.useReducer(reducer, initialState);\n    return <AppContext.Provider value={[state, dispatch]} {...props} />;\n}\n\nexport function useAppContext() {\n    const context = React.useContext(AppContext);\n    if (!context) {\n        throw new Error(\"useAppContext must be used within AppProvider\");\n    }\n    return context;\n}\n","import React from \"react\";\nimport type { FallbackProps } from \"react-error-boundary\";\n\nconst ErrorFallback = ({ error, resetErrorBoundary }: FallbackProps) => {\n    return (\n        <div>\n            <h2>Opps</h2>\n            <button onClick={resetErrorBoundary}>Reset App</button>\n        </div>\n    );\n};\n\nexport default ErrorFallback;\n","import React from \"react\";\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport { Route, Routes } from \"react-router-dom\";\nimport ErrorFallback from \"../components/ErrorFallback\";\nimport { Container } from \"@mui/material\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { grey } from \"@mui/material/colors\";\n\nconst Home = React.lazy(() => import(\"./Home\"));\n\nfunction App() {\n    const theme = createTheme({\n        palette: {\n            primary: {\n                main: grey[400],\n            },\n            secondary: {\n                main: grey[100],\n            },\n        },\n    });\n\n    const reloadPage = React.useCallback(() => {\n        window.location.reload();\n    }, []);\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Container maxWidth=\"lg\">\n                <React.Suspense fallback={<div>Loading...</div>}>\n                    <ErrorBoundary FallbackComponent={ErrorFallback} onReset={reloadPage}>\n                        <Routes>\n                            <Route path=\"/\" element={<Home />} />\n                        </Routes>\n                    </ErrorBoundary>\n                </React.Suspense>\n            </Container>\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { AppProvider } from \"./context\";\nimport App from \"./module\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.scss\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <BrowserRouter>\n                <AppProvider>\n                    <App />\n                </AppProvider>\n            </BrowserRouter>\n        </React.StrictMode>,\n        document.getElementById(\"root\")\n    );\n});\n"],"sourceRoot":""}