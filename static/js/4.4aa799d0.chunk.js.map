{"version":3,"sources":["components/Basket/OrderSummary.tsx","utils/ObjectUtil.ts","components/Basket/index.tsx","assets/pizza.jpg","components/MenuItem/MenuImage.tsx","components/MenuItem/index.tsx","components/Modal/CustomizeModal.tsx","components/MenuList/index.tsx","module/Home/index.tsx"],"names":["OrderSummary","React","memo","orders","useOrderContext","dispatch","enqueueSnackbar","useSnackbar","removeItem","id","type","payload","variant","List","map","_","OrderItem","order","onRemove","ListItem","disablePadding","ListItemIcon","IconButton","onClick","role","color","aria-label","ListItemText","sx","width","primary","quantity","name","secondary","size","toppings","textAlign","price","ObjectUtil","Object","freeze","toArray","object","keys","reduceByKey","key","reduce","acc","cur","Basket","state","orderItems","useMemo","orderTotal","orderActive","Box","p","m","display","flexDirection","justifyContent","data-testid","component","onSubmit","event","preventDefault","console","log","bgcolor","borderRadius","overflow","maxHeight","height","overflowY","Typography","align","mt","Divider","my","flexWrap","fontWeight","ml","Button","fullWidth","disabled","Link","href","underline","cursor","ImageButton","styled","ButtonBase","theme","position","breakpoints","down","zIndex","opacity","border","ImageSrc","left","right","top","bottom","backgroundSize","backgroundPosition","ImageBackdrop","backgroundColor","palette","common","black","transition","transitions","create","MenuImage","focusRipple","style","backgroundImage","Pizza","MenuItem","item","handleClick","Card","borderColor","CardContent","CardActions","mb","mx","Array","from","length","i","sizes","CustomizeDialog","open","onClose","setOrder","handleClose","updateToppings","topping","target","selected","indexOf","newToppings","filter","Set","prev","Dialog","maxWidth","DialogContent","FormControl","FormGroup","columnCount","checked","breakInside","FormControlLabel","control","Checkbox","onChange","label","RadioGroup","defaultValue","value","Radio","DialogActions","flexGrow","CustomizeModal","editing","toast","dummyMenu","MenuList","useState","setOpen","Home","alignItems","minHeight"],"mappings":"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","file":"static/js/4.4aa799d0.chunk.js","sourcesContent":["import React from \"react\";\nimport { useOrderContext } from \"../../context/order\";\nimport { useSnackbar } from \"notistack\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport { IconButton, List, ListItem, ListItemIcon, ListItemText } from \"@mui/material\";\nimport type { Order } from \"../../shared/types\";\n\nexport const OrderSummary = React.memo(({ orders }: { orders: Order[] }) => {\n    const [, dispatch] = useOrderContext();\n    const { enqueueSnackbar } = useSnackbar();\n\n    const removeItem = (id: number) => {\n        dispatch({ type: \"delete\", payload: id });\n        enqueueSnackbar(\"Item is removed\", { variant: \"info\" });\n    };\n\n    return (\n        <List>\n            {orders.map((_) => (\n                <OrderItem key={_.id} order={_} onRemove={removeItem} />\n            ))}\n        </List>\n    );\n});\n\nconst OrderItem = React.memo(({ order, onRemove }: { order: Order; onRemove: (id: number) => void }) => (\n    <ListItem disablePadding>\n        <ListItemIcon>\n            <IconButton onClick={() => onRemove(order.id)} role=\"remove\">\n                <CancelIcon color=\"primary\" aria-label=\"remove\" />\n            </IconButton>\n        </ListItemIcon>\n        <ListItemText sx={{ width: 0.8 }} primary={`${order.quantity} x ${order.name}`} secondary={`${order.size}, ${order.toppings}`} />\n        <ListItemText sx={{ textAlign: \"right\", width: 0.2 }} primary={`${`$` + order.price}`} />\n    </ListItem>\n));\n","function toArray(object: Record<string, any>) {\n    return Object.keys(object).map((_) => object[_]);\n}\n\nfunction reduceByKey(object: Record<string, any>, key: string) {\n    return Object.keys(object).reduce((acc, cur) => (acc += object[cur][key]), 0);\n}\n\nexport const ObjectUtil = Object.freeze({\n    toArray,\n    reduceByKey,\n});\n","import React from \"react\";\nimport { OrderSummary } from \"./OrderSummary\";\nimport { useOrderContext } from \"../../context/order\";\nimport { useSnackbar } from \"notistack\";\nimport { ObjectUtil } from \"../../utils/ObjectUtil\";\nimport { Box } from \"@mui/system\";\nimport { Button, Divider, Link, Typography } from \"@mui/material\";\n\nexport const Basket = React.memo(() => {\n    const [state, dispatch] = useOrderContext();\n    const { enqueueSnackbar } = useSnackbar();\n\n    const { orders } = state;\n\n    const orderItems = React.useMemo(() => {\n        if (orders === null) return [];\n        return ObjectUtil.toArray(orders as Record<string, any>);\n    }, [orders]);\n\n    const orderTotal = React.useMemo(() => {\n        if (orders === null) return 0;\n        return ObjectUtil.reduceByKey(orders as Record<string, any>, \"price\");\n    }, [orders]);\n\n    const emptyBasket = () => {\n        dispatch({ type: \"clear\" });\n        enqueueSnackbar(\"Basket cleared!\", { variant: \"info\" });\n    };\n\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        // submit to api service\n        console.log(\"submit to API: \", orders);\n        dispatch({ type: \"submit\" });\n        enqueueSnackbar(\"Your order is in the kichen!\", { variant: \"success\" });\n    };\n\n    const orderActive = orderTotal > 0;\n\n    return (\n        <Box\n            sx={{\n                p: 1,\n                m: 1,\n                width: [1, 1, 0.3],\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"center\",\n            }}\n            data-testid=\"basket\"\n        >\n            <Box\n                component=\"form\"\n                onSubmit={handleSubmit}\n                sx={{\n                    bgcolor: \"#f3f2f2\",\n                    borderRadius: 1,\n                    overflow: \"hidden\",\n                    p: 2,\n                }}\n            >\n                <Box\n                    component=\"div\"\n                    sx={{\n                        maxHeight: \"65vh\",\n                        height: \"75%\",\n                        overflow: \"auto\",\n                        overflowY: \"scroll\",\n                    }}\n                >\n                    {orderTotal ? (\n                        <OrderSummary orders={orderItems} />\n                    ) : (\n                        <Typography variant=\"body1\" align=\"center\" sx={{ mt: 4 }}>\n                            No items in your basket\n                        </Typography>\n                    )}\n                </Box>\n\n                <Divider variant=\"middle\" sx={{ my: 3 }} />\n\n                <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"flex-end\" role=\"order-total\">\n                    <Typography variant=\"body1\" sx={{ fontWeight: 700 }}>\n                        Total\n                    </Typography>\n                    <Typography variant=\"body1\" sx={{ fontWeight: 700, ml: 4 }}>\n                        $ {orderTotal}\n                    </Typography>\n                </Box>\n\n                <Button type=\"submit\" variant=\"contained\" fullWidth disabled={!orderActive} sx={{ my: 4 }}>\n                    Checkout\n                </Button>\n            </Box>\n\n            <Link\n                variant=\"h6\"\n                component=\"button\"\n                disabled={!orderActive}\n                align=\"center\"\n                href=\"#\"\n                underline={orderActive ? \"always\" : \"none\"}\n                sx={{\n                    fontWeight: 400,\n                    color: orderActive ? \"grey[400]\" : \"#d5d5d5\",\n                    my: 3,\n                    \":hover\": {\n                        cursor: orderActive ? \"pointer\" : \"auto\",\n                    },\n                }}\n                onClick={emptyBasket}\n            >\n                Empty Basket\n            </Link>\n        </Box>\n    );\n});\n","export default __webpack_public_path__ + \"static/media/pizza.98ab3b9b.jpg\";","import React from \"react\";\nimport Pizza from \"../../assets/pizza.jpg\";\nimport { styled } from \"@mui/material/styles\";\nimport { ButtonBase } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport type { Theme } from \"@mui/material\";\n\nconst ImageButton = styled(ButtonBase)(({ theme }) => ({\n    position: \"relative\",\n    height: 140,\n    [theme.breakpoints.down(\"md\")]: {\n        width: \"100% !important\", // Overrides inline-style\n        height: 300,\n    },\n    \"&:hover, &.Mui-focusVisible\": {\n        zIndex: 1,\n        \"& .MuiImageBackdrop-root\": {\n            opacity: 0.15,\n        },\n        \"& .MuiImageMarked-root\": {\n            opacity: 0,\n        },\n        \"& .MuiTypography-root\": {\n            border: \"4px solid currentColor\",\n        },\n    },\n}));\n\nconst ImageSrc = styled(\"span\")({\n    position: \"absolute\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    borderRadius: 8,\n});\n\nconst ImageBackdrop = styled(\"span\")(({ theme }: { theme: Theme }) => ({\n    position: \"absolute\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    borderRadius: 8,\n    backgroundColor: theme.palette.common.black,\n    opacity: 0.2,\n    transition: theme.transitions.create(\"opacity\"),\n    \":hover\": {\n        opacity: 0,\n    },\n}));\n\ninterface MenuImageProps {\n    onClick: () => void;\n}\n\nexport const MenuImage = React.memo(({ onClick }: MenuImageProps) => {\n    return (\n        <Box sx={{ display: \"flex\", flexWrap: \"wrap\", width: \"100%\" }}>\n            <ImageButton focusRipple style={{ width: \"100%\" }} onClick={onClick} role=\"dialog-image\">\n                <ImageSrc\n                    style={{\n                        backgroundImage: `url(${Pizza})`,\n                    }}\n                />\n                <ImageBackdrop />\n            </ImageButton>\n        </Box>\n    );\n});\n","import React from \"react\";\nimport { MenuImage } from \"./MenuImage\";\nimport { useOrderContext } from \"../../context/order\";\nimport type { MenuItemI } from \"../../shared/types\";\nimport { Button, Card, CardActions, CardContent, Typography } from \"@mui/material\";\n\nexport const MenuItem = React.memo(({ item, onClick }: { item: MenuItemI; onClick: () => void }) => {\n    const [, dispatch] = useOrderContext();\n\n    const { name, price } = item;\n\n    const handleClick = () => {\n        dispatch({ type: \"edit\", payload: { name, price } });\n        onClick();\n    };\n\n    return (\n        <Card variant=\"outlined\" sx={{ width: [1, 1, 0.3], m: 1, borderColor: \"#e9e9e9\", textAlign: \"center\", borderRadius: 4 }}>\n            <CardContent>\n                <MenuImage onClick={handleClick} />\n                <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mt: 2 }}>\n                    {name} - {`$` + price}\n                </Typography>\n            </CardContent>\n            <CardActions\n                sx={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    mb: 2,\n                    mx: 1,\n                }}\n            >\n                <Button variant=\"contained\" fullWidth onClick={handleClick} role=\"dialog-button\">\n                    Choose\n                </Button>\n            </CardActions>\n        </Card>\n    );\n});\n","import * as React from \"react\";\nimport { useOrderContext } from \"../../context/order\";\nimport { useSnackbar } from \"notistack\";\nimport Button from \"@mui/material/Button\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport Dialog from \"@mui/material/Dialog\";\nimport { Box } from \"@mui/system\";\nimport { Checkbox, DialogActions, DialogContent, FormControl, FormControlLabel, FormGroup, Radio, RadioGroup } from \"@mui/material\";\n\nconst toppings = Array.from({ length: 9 }).map((_, i) => `Pizza Topping #${i + 1}`);\nconst sizes = Array.from({ length: 3 }).map((_, i) => `Pizza Size #${i + 1}`);\n\ninterface CustomizeDialogProps {\n    open: boolean;\n    onClose: (order: OrderState | null) => void;\n}\n\ninterface OrderState {\n    toppings: string[];\n    size: string;\n}\n\nfunction CustomizeDialog({ open, onClose }: CustomizeDialogProps) {\n    const [order, setOrder] = React.useState<OrderState>({\n        toppings: [],\n        size: \"Pizza Size #1\",\n    });\n\n    const { enqueueSnackbar } = useSnackbar();\n\n    const handleClose = () => {\n        onClose(null);\n    };\n\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        if (order.toppings.length > 0) {\n            onClose(order);\n        } else {\n            enqueueSnackbar(\"Must choose at least one topping\", { variant: \"error\" });\n        }\n    };\n\n    const updateToppings = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const topping = event.target.name;\n        const selected = order.toppings.indexOf(topping) !== -1;\n        let newToppings = [...order.toppings];\n        if (selected) {\n            newToppings = newToppings.filter((_) => _ !== topping);\n        } else {\n            newToppings = Array.from(new Set([topping, ...newToppings]));\n        }\n        setOrder((prev) => ({ ...prev, toppings: newToppings }));\n    };\n\n    const updateSize = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setOrder((prev) => ({ ...prev, size: event.target.value }));\n    };\n\n    return (\n        <Dialog onClose={handleClose} open={open} maxWidth=\"lg\" role=\"dialog\">\n            <Box component=\"form\" onSubmit={handleSubmit}>\n                <DialogContent>\n                    <Box>\n                        <FormControl>\n                            <FormGroup>\n                                <List sx={{ columnCount: [2, 2, 3] }}>\n                                    {toppings.map((topping) => {\n                                        const checked = order.toppings.indexOf(topping) !== -1;\n                                        return (\n                                            <ListItem disablePadding key={topping} sx={{ breakInside: \"avoid\" }}>\n                                                <FormControlLabel control={<Checkbox checked={checked} onChange={updateToppings} name={topping} />} label={topping} />\n                                            </ListItem>\n                                        );\n                                    })}\n                                </List>\n                            </FormGroup>\n                        </FormControl>\n                    </Box>\n\n                    <Box>\n                        <FormControl>\n                            <RadioGroup aria-label=\"size\" defaultValue={sizes[0]} name=\"size\" value={order.size} onChange={updateSize}>\n                                {sizes.map((size) => (\n                                    <FormControlLabel control={<Radio />} value={size} label={size} key={size} />\n                                ))}\n                            </RadioGroup>\n                        </FormControl>\n                    </Box>\n                </DialogContent>\n\n                <DialogActions>\n                    <Box display=\"flex\" flexGrow=\"1\" justifyContent=\"space-evenly\">\n                        <Button variant=\"contained\" type=\"submit\" fullWidth sx={{ m: 2 }}>\n                            Add to Basket\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={handleClose} fullWidth sx={{ m: 2 }}>\n                            Cancel\n                        </Button>\n                    </Box>\n                </DialogActions>\n            </Box>\n        </Dialog>\n    );\n}\n\nexport function CustomizeModal({ open, onClose }: { open: boolean; onClose: () => void }) {\n    const [state, dispatch] = useOrderContext();\n    const { enqueueSnackbar } = useSnackbar();\n\n    const { editing } = state;\n\n    const handleClose = (order: OrderState | null) => {\n        if (order) {\n            // @ts-ignore -- will always call handleClose with editing not null\n            dispatch({ type: \"create\", payload: { quantity: 1, ...editing, ...order }, toast: \"create\" });\n            enqueueSnackbar(\"Added an item to Basket\", { variant: \"success\" });\n        } else {\n            dispatch({ type: \"edit\", payload: null });\n        }\n        onClose();\n    };\n\n    return <CustomizeDialog key={editing ? editing.id : \"none\"} open={open} onClose={handleClose} />;\n}\n","import React from \"react\";\nimport { MenuItem } from \"../MenuItem\";\nimport { CustomizeModal } from \"../Modal/CustomizeModal\";\nimport { Box } from \"@mui/system\";\nimport type { MenuItemI } from \"../../shared/types\";\n\nconst dummyMenu: MenuItemI[] = Array.from({ length: 6 }).map((_, i) => ({\n    id: i,\n    name: `Pizza Name ${i + 1}`,\n    price: 99,\n}));\n\nexport const MenuList = React.memo(() => {\n    const [open, setOpen] = React.useState(false);\n\n    return (\n        <>\n            <Box\n                sx={{\n                    flexGrow: 1,\n                    width: [1, 1, 0.7],\n                    display: \"flex\",\n                    flexWrap: \"wrap\",\n                    my: 1,\n                }}\n            >\n                {dummyMenu.map((_) => (\n                    <MenuItem key={_.id} item={_} onClick={() => setOpen(true)} />\n                ))}\n            </Box>\n            <CustomizeModal open={open} onClose={() => setOpen(false)} />\n        </>\n    );\n});\n","import React from \"react\";\nimport { Basket } from \"../../components/Basket\";\nimport { MenuList } from \"../../components/MenuList\";\nimport { Box } from \"@mui/system\";\n\nexport default function Home() {\n    return (\n        <>\n            {/* {JSON.stringify(state, undefined, 2)} */}\n            <Box sx={{ display: \"flex\", flexDirection: [\"column\", \"column\", \"row\"], alignItems: \"flex-start\", minHeight: \"100vh\" }}>\n                <MenuList />\n                <Basket />\n            </Box>\n        </>\n    );\n}\n"],"sourceRoot":""}